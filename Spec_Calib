#include <Wire.h>
#include <Adafruit_MotorShield.h>


int irpin1=2;
int irpin2=3;
unsigned long disp_count=0L;

int a,b,c;
int stepMot=1;
volatile byte state= BACKWARD;
int limsw1,limsw2=1;

unsigned long saved_loc=0L;
Adafruit_MotorShield AFMS = Adafruit_MotorShield(); 
Adafruit_StepperMotor *myMotor = AFMS.getStepper(200, 2);


void setup()
{ Serial.begin(9600);
 Serial.println("System up!");

  AFMS.begin();


myMotor->setSpeed(100);
 pinMode(irPin1, INPUT) ; //setting pin irPin1 for limit switch 1
  pinMode(irPin2, INPUT);


}

 void loop()
 {
  a=chiqr1();
     while (!(a==1));
   { 
    
     myMotor-> step(stepMot,state,DOUBLE);
     a=chiqr1();
    
   }
    saved_loc=0;
    
    
   do
   {
   myMotor->step(stepMot,FORWARD,DOUBLE);
   disp_count++;
   b=chiqr2();
   }while(!(b==1));
   saved_loc=saved_loc+disp_count;// total no.of steps from one limsw1 to other limsw2
   
   Serial.println(F("the total no.of steps are:"));
   Serial.print(saved_loc);
 }
 
 int chiqr1()
 {
   if( digitalRead(irpin1)==HIGH&& limsw1)
  { stepMot=0;
   return 1;
 }
   else{
     return 0;}
 }
   
   int chiqr2()
 {
   if( digitalRead(irpin2)==HIGH&& limsw2)
  { stepMot=0;
   return 1;
 }
   else{
     return 0;}
 }
   
   
